@mixin css($options: ()) {
  $config: map-merge(
    (
      p: null,
      c: null,
      br: null,
      bg: null,
    ),
    $options
  );

  color: map-get($config, c);
  border: map-get($config, br);
  padding: map-get($config, p);
  background-color: map-get($config, bg);
}

div {
  @include css((
    bg: #fff,
    p: 1px 2px,
  ));
}

@if $util {
  @include meta.load-css("./utilities/util@API");
}


*, *::before, *::after {
  box-sizing: border-box;
}
* {
  margin: 0;
}
html, body {
  height: 100%;
}
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}
input, button, textarea, select {
  font: inherit;
}
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}
#root, #__next {
  isolation: isolate;
}

@use "./import/basket" as * with (
  $important: false
);

$mappp: (
  16px: 1rem,
  32px: 2rem,
);

@include describe("they return rem value") {
  @include it("is should compile px to rem") {
    @include run(test('Rem', $mappp)); 
  }
}